package com.flipkart.batching.flatbuffer;// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Data extends Table {
  public static Data getRootAsData(ByteBuffer _bb) { return getRootAsData(_bb, new Data()); }
  public static Data getRootAsData(ByteBuffer _bb, Data obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public Data __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public long eventId() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0; }

  public static int createData(FlatBufferBuilder builder,
      long eventId) {
    builder.startObject(1);
    Data.addEventId(builder, eventId);
    return Data.endData(builder);
  }

  public static void startData(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addEventId(FlatBufferBuilder builder, long eventId) { builder.addLong(0, eventId, 0); }
  public static int endData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

